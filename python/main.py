import itertools
import binascii

def binaryToDecimal(binary):

    decimal, i, n = 0, 0, 0
    while(binary != 0):
        dec = binary % 10
        decimal = decimal + dec * pow(2, i)
        binary = binary//10
        i += 1

    return (decimal)   

def binaryToUTF8(binary):
    new_string = ""
    for i in range(0, len(binary), 8):
        temp_data = int(binary[i:i + 8])
        decimal_data = binaryToDecimal(temp_data)
        new_string = new_string + chr(decimal_data)
    return new_string

base_binary = [
    "01001101", "01000100", "01000101", "01110111", "01001101", "01000100",
    "01000101", "01110111", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000001", "01111000", "01001101", "01000100", "01000101", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000101", "01111000", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000101", "01111000", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000101", "01111000", "01001101", "01010100", "01000101", "01100111", 
    "01001101", "01000100", "01000001", "01111000", "01001101", "01000100", 
    "01000001", "01110111", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01110111", "01001101", "01010100", 
    "01000001", "01111000", "01001101", "01010100", "01000101", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000101", "01111000", "01001101", "01010100", "01000101", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01010100", 
    "01000001", "01110111", "01001101", "01010100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000101", "01111000", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000101", "01111000", "01001101", "01000100", 
    "01000001", "01111000", "01001101", "01000100", "01000001", "01100111", 
    "01001101", "01000100", "01000001", "01111000", "01001101", "01000100", 
    "01000001", "01110111", "01001101", "01000100", "01000101", "00111101"
]

base_binary_converted = binaryToUTF8("".join(base_binary))
binary = binascii.a2b_base64(base_binary_converted).decode("UTF-8").replace(" ", "")
string_base = binaryToUTF8(binary)

string_data = "".join([
    (lambda x:x.upper())
    (letter) 
    if letter in "hw" 
    else letter 
    for letter in itertools.chain(string_base)
])

final_string = "".join([
    (lambda x:x.upper())
    (letter) 
    if letter in "hw" 
    else letter 
    for letters in zip(
        "".join([
            (lambda x:x.upper())
            (letter) 
            if letter in "hw" 
            else letter 
            for letter in itertools.chain(string_data)
        ])
    ) 
    for letter in letters 
])

exec(binascii.a2b_base64("cHJpbnQoZmluYWxfc3RyaW5nKQ=="))
